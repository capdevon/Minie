// Gradle build script for the Minie project

plugins {
    id 'base' // to add a "clean" task to the root project
}

ext {
    jmeTarget = '' // distinguish non-JME libraries built for specific JME releases

    // current version of the JMonkeyEngine libraries:
    jme3Version = '3.6.1-stable'

    // module coordinates of external dependencies:
    acorusCoordinates = 'com.github.stephengold:Acorus:1.1.0' + jmeTarget
    desktopCoordinates = 'org.jmonkeyengine:jme3-desktop:' + jme3Version
    heartCoordinates = 'com.github.stephengold:Heart:8.7.0' + jmeTarget
    joggCoordinates = 'org.jmonkeyengine:jme3-jogg:' + jme3Version
    junitCoordinates = 'junit:junit:4.13.2'
    niftyCoordinates = 'com.github.stephengold:jme3-utilities-nifty:0.9.35' + jmeTarget
    pluginsCoordinates = 'org.jmonkeyengine:jme3-plugins:' + jme3Version
    styleCoordinates = 'com.github.nifty-gui:nifty-style-black:1.4.3'
    testdataCoordinates = 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'
    wesCoordinates = 'com.github.stephengold:Wes:0.8.0' + jmeTarget

    // select one version of LWJGL:
    //lwjglCoordinates =  'org.jmonkeyengine:jme3-lwjgl:' + jme3Version // for LWJGL 2.x
    lwjglCoordinates = 'org.jmonkeyengine:jme3-lwjgl3:' + jme3Version // for LWJGL 3.x

    minieSnapshot = '-SNAPSHOT' // for development builds
    //minieSnapshot = '' // for release builds
    minieVersion = '7.7.1'
}

subprojects {
    apply from: rootProject.file('common.gradle')
}

tasks.register('checkstyle') {
    dependsOn ':DacWizard:checkstyleMain', ':Jme3Examples:checkstyleMain', \
        ':MinieAssets:checkstyleMain', ':MinieDump:checkstyleMain', \
        ':MinieExamples:checkstyleMain', ':MinieLibrary:checkstyleMain', \
        ':MinieLibrary:checkstyleTest', ':TutorialApps:checkstyleMain', \
        ':VhacdTuner:checkstyleMain'
    description 'Checks the style of all Java sourcecode.'
}

// Register cleanup tasks:

clean.dependsOn('cleanNodeModules')
tasks.register('cleanNodeModules', Delete) {
    delete 'node_modules'
}

// Register publishing tasks:

tasks.register('install') {
    dependsOn ':MinieLibrary:install'
    description 'Installs Maven artifacts to the local repository.'
}
tasks.register('release') {
    dependsOn ':MinieLibrary:release'
    description 'Stages Maven artifacts to Sonatype OSSRH.'
}
